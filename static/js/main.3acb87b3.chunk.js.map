{"version":3,"sources":["redux/transformFilters.js","redux/rootReducer.js","redux/store.js","components/Layout/Screens/LoadingScreen/index.js","components/Layout/Screens/ErrorScreen/index.js","lib/components/ScrollToTop.js","lib/hooks/usePrevious.js","components/Layout/Layouts/MainLayout/index.js","components/Layout/RouteTemplates/MainRoute.js","pages/routes/MainPages/index.js","pages/routes/NotFound/index.js","pages/RootRoutes.js","App.js","serviceWorker.js","index.js","components/Layout/Layouts/MainLayout/MainLayout.module.scss","lib/helpers/request.js","lib/helpers/common.js","lib/helpers/index.js","lib/api.js","redux/ducks/estates.duck.js","components/UI/Spinner/index.js","components/UI/Spinner/Spinner.module.scss","components/Layout/Screens/LoadingScreen/LoadingScreen.module.scss","components/Layout/Screens/ErrorScreen/ErrorScreen.module.scss","pages/routes/NotFound/NotFound.module.scss"],"names":["createWhitelistFilter","history","persistConfig","key","storage","transforms","createBrowserHistory","persistedReducer","persistReducer","combineReducers","router","connectRouter","reducers","middleware","composeWithDevTools","applyMiddleware","thunk","routerMiddleware","store","createStore","persistor","persistStore","LoadingScreen","className","Content","Spinner","ErrorScreen","state","error","errorInfo","this","setState","children","props","to","React","useEffect","withRouter","location","prevLocation","value","ref","useRef","current","usePrevious","pathname","window","scrollTo","MainLayout","rest","Grid","InnerContent","MainTemplate","Component","component","render","fallback","Main","loadable","pMinDelay","NotFound","Routes","MainRoute","exact","path","hot","loading","Boolean","hostname","match","navigator","serviceWorker","ready","then","registration","unregister","Application","rootEl","document","getElementById","App","ReactDOM","module","exports","method","url","a","options","config","instance","axios","create","interceptors","response","use","Promise","reject","data","debounce","fn","interval","timer","clearTimeout","args","arguments","that","setTimeout","apply","getImgUrl","imgArr","id","URL","page","request","actions","createActions","reducer","handleActions","fetchEstatesRequest","toString","fetchEstatesSuccess","action","payload","items","pagination","oldResults","estates","offset","fetchEstatesFailure","effects","fetchEstates","dispatch","api","message","resolve","getState","cs","cb","createSelector","selectors","getEstates","s","getErrors","getLoading","Preloader"],"mappings":"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","file":"static/js/main.3acb87b3.chunk.js","sourcesContent":["import { createWhitelistFilter } from 'redux-persist-transform-filter';\n\nexport default [createWhitelistFilter('estates', ['estates'])];\n","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\nimport * as reducers from './ducks';\n\nexport default history =>\n  combineReducers({\n    router: connectRouter(history),\n    ...reducers,\n  });\n","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport { routerMiddleware } from 'connected-react-router';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\nimport storage from 'redux-persist/lib/storage/session';\nimport transforms from './transformFilters';\nimport rootReducer from './rootReducer';\n// PERSIST STORE\nconst persistConfig = {\n  key: 'root',\n  storage,\n  transforms,\n};\n\nexport const history = createBrowserHistory();\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\n\nconst middleware = composeWithDevTools(\n  applyMiddleware(thunk, routerMiddleware(history)),\n);\n\nexport const store = createStore(persistedReducer, middleware);\nexport const persistor = persistStore(store);\n\nexport default () => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (module.hot) {\n      module.hot.accept('./rootReducer', () => {\n        store.replaceReducer(persistedReducer);\n      });\n    }\n  }\n  return { store, persistor, history };\n};\n","import React from 'react';\nimport Spinner from 'components/UI/Spinner';\nimport { Content } from './LoadingScreen.module.scss';\n\n// EXPORTED COMPONENT\nconst LoadingScreen = () => (\n  <div className={Content}>\n    <Spinner />\n  </div>\n);\n\nexport default LoadingScreen;\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Content } from './ErrorScreen.module.scss';\n\nclass ErrorScreen extends React.Component {\n  state = {\n    error: null,\n    errorInfo: null,\n  };\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({\n      error,\n      errorInfo,\n    });\n  }\n\n  render() {\n    const { errorInfo } = this.state;\n    const { children } = this.props;\n    if (errorInfo) {\n      return (\n        <div className={Content}>\n          <div>\n            <h1>Упс!</h1>\n            <p>Запрашиваемая страница не существует</p>\n            <Link to=\"/\">Вернуться на главную</Link>\n          </div>\n        </div>\n      );\n    }\n    return children;\n  }\n}\n\nexport default ErrorScreen;\n","import React from 'react';\nimport { withRouter } from 'react-router';\n// HOOKS\nimport { usePrevious } from 'lib/hooks';\n\nconst { useEffect } = React;\n\nconst ScrollToTop = ({ children, location }) => {\n  const prevLocation = usePrevious(location.pathname);\n  useEffect(() => {\n    if (prevLocation && prevLocation !== location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }, [location.pathname, prevLocation]);\n  return children;\n};\n\nexport default withRouter(ScrollToTop);\n","import { useEffect, useRef } from 'react';\n\nexport const usePrevious = value => {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n};\n","import * as React from 'react';\nimport ScrollToTop from 'lib/components/ScrollToTop';\nimport { Content, Grid, InnerContent } from './MainLayout.module.scss';\n// HELPERS\n\n// EXPORTED COMPONENT\nconst MainLayout = ({ children, ...rest }) => {\n  return (\n    <ScrollToTop>\n      <div className={Content}>\n        <div className={Grid}>\n          <div className={InnerContent}>\n            {React.cloneElement(children, { ...rest })}\n          </div>\n        </div>\n      </div>\n    </ScrollToTop>\n  );\n};\n\nexport default MainLayout;\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport { Route } from 'react-router-dom';\n// COMPONENTS\nimport { ErrorScreen, LoadingScreen } from 'components/Layout/Screens';\nimport { MainLayout } from 'components/Layout/Layouts';\n\nconst MainTemplate = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props => (\n      <ErrorScreen>\n        <MainLayout {...props}>\n          <Component\n            {...props}\n            {...rest}\n            fallback={<LoadingScreen {...props} />}\n          />\n        </MainLayout>\n      </ErrorScreen>\n    )}\n  />\n);\n\nexport default MainTemplate;\n","import loadable from '@loadable/component';\nimport pMinDelay from 'p-min-delay';\n\nexport const Main = loadable(() => pMinDelay(import('./Main'), 300));\n","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Content } from './NotFound.module.scss';\n\nconst NotFound = () => {\n  return (\n    <section className={Content}>\n      <div>\n        <h1>Oops!</h1>\n        <p>The page you are looking for doesn&apos;t exist</p>\n        <Link to=\"/\">Go Home</Link>\n      </div>\n    </section>\n  );\n};\n\nexport default NotFound;\n","import * as React from 'react';\nimport { Switch, Redirect, Route } from 'react-router-dom';\n// COMPONENTS\nimport { MainRoute } from 'components/Layout/RouteTemplates';\nimport { NotFound, Main } from './routes';\n\n// EXPORTED ROUTES\nconst Routes = () => (\n  <Switch>\n    <MainRoute exact path=\"/\" component={Main} />\n    <Route path=\"/404\" component={NotFound} />\n    <Redirect to=\"/404\" />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { hot } from 'react-hot-loader/root';\nimport configureStore from 'redux/store';\n// ROUTES\nimport Routes from 'pages/RootRoutes';\n\nconst { store, persistor, history } = configureStore();\n\n// EXPORTED APP\nconst App = () => (\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <ConnectedRouter history={history}>\n        <Routes />\n      </ConnectedRouter>\n    </PersistGate>\n  </Provider>\n);\n\nexport default hot(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n// COMPONENTS\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nconst rootEl = document.getElementById('root');\n\nconst renderApp = Application => {\n  ReactDOM.render(<Application />, rootEl);\n};\n\nrenderApp(App);\n\n/* eslint-disable global-require */\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default;\n    renderApp(NextApp);\n  });\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"MainLayout_Content__2KPxz\",\"Grid\":\"MainLayout_Grid__3zbBs\",\"InnerContent\":\"MainLayout_InnerContent__3yHH8\"};","import axios from 'axios';\n\nexport default async (method, url, options = {}, config = null) => {\n  const instance = axios.create({\n    // baseURL: API_KEY,\n    // headers: {},\n  });\n\n  instance.interceptors.response.use(\n    response => {\n      return response;\n    },\n    error => {\n      return Promise.reject(error);\n    },\n  );\n\n  try {\n    const response = await instance[method](url, options, config);\n\n    if (response.data) {\n      const { data } = response;\n      return data;\n    }\n  } catch (err) {\n    const error = await err.response;\n\n    throw error;\n  }\n};\n","/* eslint-disable prefer-rest-params */\nexport function debounce(fn, interval) {\n  let timer;\n  return function debounced() {\n    clearTimeout(timer);\n    const args = arguments;\n    const that = this;\n    timer = setTimeout(function callOriginalFn() {\n      fn.apply(that, args);\n    }, interval);\n  };\n}\n\nexport const getImgUrl = imgArr =>\n  typeof imgArr[0] === 'object' && imgArr[0].id\n    ? `https://images.jqestate.ru/${imgArr[0].id}-thumbnail-512`\n    : 'https://via.placeholder.com/769x512?text=Нет+фото';\n","export { default as request } from './request';\nexport * from './common';\n","import { request } from 'lib/helpers';\n\nconst LIMIT = 12;\nconst URL = 'https://api.jqestate.ru/v1/properties/country';\nexport default {\n  getEstates: (page = 0) => {\n    return request(\n      'get',\n      `${URL}?pagination[limit]=${LIMIT}&pagination[offset]=${page}`,\n    );\n  },\n};\n","import { handleActions, createActions } from 'redux-actions';\nimport { createSelector } from 'reselect';\n// API\nimport api from 'lib/api';\n\nconst initialState = {\n  estates: null,\n  loading: false,\n  error: false,\n};\n\nconst actions = createActions(\n  'FETCH_ESTATES_REQUEST',\n  'FETCH_ESTATES_SUCCESS',\n  'FETCH_ESTATES_FAILURE',\n);\n\nconst reducer = handleActions(\n  {\n    [actions.fetchEstatesRequest.toString()]: state => ({\n      ...state,\n      loading: true,\n    }),\n    [actions.fetchEstatesSuccess.toString()]: (state, action) => {\n      const { items, pagination } = action.payload;\n      const oldResults =\n        state.estates && pagination.offset !== 0 ? state.estates.items : [];\n      return {\n        ...state,\n        estates: {\n          ...action.payload,\n          items: [...oldResults, ...items],\n        },\n        loading: false,\n      };\n    },\n    [actions.fetchEstatesFailure.toString()]: state => ({\n      ...state,\n      loading: false,\n      error: true,\n    }),\n  },\n  initialState,\n);\n\nconst effects = {\n  fetchEstates: page => async dispatch => {\n    try {\n      await dispatch(actions.fetchEstatesRequest());\n      const data = await api.getEstates(page);\n      await dispatch(actions.fetchEstatesSuccess(data));\n    } catch (error) {\n      dispatch(actions.fetchEstatesFailure(error.message));\n      return new Promise(resolve => resolve(error.message));\n    }\n  },\n};\n\nconst getState = state => state.estates;\nconst cs = cb =>\n  createSelector(\n    [getState],\n    cb,\n  );\n\nconst selectors = {\n  getEstates: cs(s => s.estates),\n  getErrors: cs(s => s.error),\n  getLoading: cs(s => s.loading),\n};\n\nexport { initialState as state, reducer, actions, selectors, effects };\n","import React from 'react';\nimport { Preloader } from './Spinner.module.scss';\n\nconst Spinner = () => (\n  <ul className={Preloader}>\n    <li />\n    <li />\n    <li />\n    <li />\n  </ul>\n);\n\nexport default Spinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Preloader\":\"Spinner_Preloader__3o44W\",\"animate\":\"Spinner_animate__71tLa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"LoadingScreen_Content__3e1rf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"ErrorScreen_Content__2Tfwe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"NotFound_Content__2xYYS\"};"],"sourceRoot":""}